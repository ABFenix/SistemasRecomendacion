{
    "contents" : "#' Peliculas relacionadas \n#' \n#' @param x A string.\n#' @param y A number. Default value, 5\n#' @return Las {y} peliculas relacionadas con la película de título {x} and.\n#' @examples\n#' recomienda.peliculas(1, 1)\n#' recomienda.peliculas(10.1)\n#' @export\nrecomienda.peliculas <- function (d_titulo, d_kn=5) {\n  \n  pelis <- as.data.table(read.table(\"../dat/ml-100k/u.data\", sep = \"\\t\"))\n  colnames(pelis) <- c(\"user\", \"item\", \"rating\", \"timestamp\")\n  pelis <- within(pelis, rm(timestamp))\n  titulos_pelis <- as.data.table(read.table(\"../dat/ml-100k/u.item\", sep = \"|\", quote=\"\"))\n  titulos_pelis <- titulos_pelis[,.(V1,V2)]\n  colnames(titulos_pelis) <- c(\"id\",\"titulo\")\n  \n  id_peli <- titulos_pelis[toupper(titulo) == toupper(d_titulo), id]\n  \n  if (length(id_peli) == 1) {\n    val_peli <- pelis[pelis$item == id_peli,]\n    val_otherpelis <- pelis[pelis$item != id_peli,]\n    tmp <- merge(val_peli, val_otherpelis, by = \"user\")\n    tmp <- tmp[order(tmp$item.y),]\n    \n    result <- tmp[, `:=`(n=length(user), cosine.dist=cor(rating.x, rating.y)), by=item.y]\n    result <- unique(result[,.(item.y, n, cosine.dist)])\n    result <- merge(result, titulos_pelis, all.x=TRUE, by.x=\"item.y\", by.y=\"id\")\n    result <- result[order(-result$cosine.dist),]\n    result <- result[result$n>=5,]\n    return (head(result, d_kn))\n  }\n  else {\n    print (\"La pelicula no se encuentra entre las valoradas por los usuarios\")\n    return (c(\"\"))\n  }\n}",
    "created" : 1462305388710.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3655484208",
    "id" : "E734DF4E",
    "lastKnownWriteTime" : 1462305883,
    "path" : "C:/Practicas/CDS_Entrega_Sistemas_Recomendacion/src/recomienda.peliculas.R",
    "project_path" : "recomienda.peliculas.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}